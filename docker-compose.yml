services:
  products-service:
    container_name: products_service
    build:
      context: .
      dockerfile: services/products-service/Dockerfile
    working_dir: /app/services/products-service
    volumes:
      - .:/app
    ports:
      - "3001:3000"
    depends_on:
      - products-db
    env_file:
      - ./services/products-service/.env
    networks:
      - micro-net

  products-db:
    image: postgres:16
    container_name: products_db
    environment:
      POSTGRES_DB: products
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_pass
    ports:
      - "5433:5432"
    networks:
      - micro-net

  central-service:
    container_name: central_service
    build:
      context: .
      dockerfile: services/central-service/Dockerfile
    working_dir: /app/services/central-service
    volumes:
      - .:/app
    ports:
      - "3006:3000"
    depends_on:
      - central-db
    env_file:
      - ./services/central-service/.env
    networks:
      - micro-net

  central-db:
    image: postgres:16
    container_name: central_db
    environment:
      POSTGRES_DB: central
      POSTGRES_USER: central_user
      POSTGRES_PASSWORD: central_pass
    ports:
      - "5436:5432"
    networks:
      - micro-net

  notifications-service:
    container_name: notifications_service
    build:
      context: .
      dockerfile: services/notifications-service/Dockerfile
    working_dir: /app/services/notifications-service
    volumes:
      - .:/app
    ports:
      - "3007:3000"
    depends_on:
      - notifications-db
    env_file:
      - ./services/notifications-service/.env
    networks:
      - micro-net

  notifications-db:
    image: postgres:16
    container_name: notifications_db
    environment:
      POSTGRES_DB: notifications
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: notification_pass
    ports:
      - "5438:5432"
    networks:
      - micro-net

  stocks-service:
    container_name: stocks_service
    build:
      context: .
      dockerfile: services/stocks-service/Dockerfile
    working_dir: /app/services/stocks-service
    volumes:
      - .:/app
    ports:
      - "3008:3000"
    depends_on:
      - stocks-db
    env_file:
      - ./services/stocks-service/.env
    networks:
      - micro-net

  stocks-db:
    image: postgres:16
    container_name: stocks_db
    environment:
      POSTGRES_DB: stocks
      POSTGRES_USER: stock_user
      POSTGRES_PASSWORD: stock_pass
    ports:
      - "5437:5432"
    networks:
      - micro-net

  auth-service:
    container_name: auth_service
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    working_dir: /app/services/auth-service
    volumes:
      - .:/app
    ports:
      - "3002:3000"
    depends_on:
      - auth-db
    env_file:
      - ./services/auth-service/.env
    networks:
      - micro-net

  auth-db:
    image: postgres:16
    container_name: auth_db
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    ports:
      - "5434:5432"
    networks:
      - micro-net

  transfers-service:
    container_name: transfers_service
    build:
      context: .
      dockerfile: services/transfers-service/Dockerfile
    working_dir: /app/services/transfers-service
    volumes:
      - .:/app
    ports:
      - "3003:3000"
    depends_on:
      - transfers-db
    env_file:
      - ./services/transfers-service/.env
    networks:
      - micro-net

  transfers-db:
    image: postgres:16
    container_name: transfers_db
    environment:
      POSTGRES_DB: transfers
      POSTGRES_USER: transfer_user
      POSTGRES_PASSWORD: transfer_pass
    ports:
      - "5435:5432"
    networks:
      - micro-net

  views-service:
    container_name: views_service
    build:
      context: .
      dockerfile: services/views-service/Dockerfile
    working_dir: /app/services/views-service
    volumes:
      - .:/app
    ports:
      - "3009:3000"
    env_file:
      - ./services/views-service/.env
    networks:
      - micro-net

  # rabbitmq
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"  # RabbitMQ Management UI
      - "5672:5672"    # RabbitMQ AMQP protocol
    environment:
      RABBITMQ_DEFAULT_USER: rbmq_user
      RABBITMQ_DEFAULT_PASS: rbmq_pass
    networks:
      - micro-net

  # nginx
  nginx:
    image: nginx:alpine
    container_name: nginx_gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - products-service
      - auth-service
      - transfers-service
      - stocks-service
      - notifications-service
    networks:
      - micro-net

networks:
  micro-net:
    driver: bridge
