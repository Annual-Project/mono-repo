// datasource et generator
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  output        = "../generated"
}

// Modèle Product
// model Product {
//   id          Int           @id @default(autoincrement())
//   name        String
//   description String?
//   price       Float
//   //categoryId  Int?      @map("category_id")
//   //category    Category? @relation("CategoryProducts", fields: [categoryId], references: [id])
//   createdAt   DateTime      @default(now()) @map("created_at")
//   updatedAt   DateTime      @updatedAt @map("updated_at")

//   // Relations
//   stocks        Stock[]
//   stockHistory  StockHistory[]

//   @@map("products")
// }

model Store {
  id          Int      @id @default(autoincrement()) @map("id")
  name        String   @map("name")
  description String?  @map("description")
  // address     String?   @map("address")
  // phone       String?   @map("phone")
  // email       String?   @map("email")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  // products   Product[] @relation("StoreProducts")
  Stock        Stock[]
  StockHistory StockHistory[]

  @@map("store")
}

// Modèle Stock
model Stock {
  id                Int      @id @default(autoincrement()) @map("id")
  productId         Int      @map("product_id")
  storeId           Int      @map("store_id")
  quantityAvailable Int      @map("quantity_available")
  criticalThreshold Int      @map("critical_threshold") @default(10)
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime? @updatedAt @map("updated_at")

  store Store @relation(fields: [storeId], references: [id])
  // product           Product   @relation(fields: [productId], references: [id])

  @@map("stock")
}

// Modèle StockHistory
model StockHistory {
  id        Int      @id @default(autoincrement()) @map("id")
  productId Int      @map("product_id")
  storeId   Int      @map("store_id")
  action    String   @map("action")
  quantity  Int      @map("quantity")
  comment   String?  @map("comment")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  store Store @relation(fields: [storeId], references: [id])
  // product   Product  @relation(fields: [productId], references: [id])

  @@map("stock_history")
}
