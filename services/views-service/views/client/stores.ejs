<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AmaZup - Nos Magasins</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        border: "hsl(214.3 31.8% 91.4%)",
                        input: "hsl(214.3 31.8% 91.4%)",
                        ring: "hsl(222.2 84% 4.9%)",
                        background: "hsl(0 0% 100%)",
                        foreground: "hsl(222.2 84% 4.9%)",
                        primary: {
                            DEFAULT: "hsl(222.2 47.4% 11.2%)",
                            foreground: "hsl(210 40% 98%)",
                        },
                        secondary: {
                            DEFAULT: "hsl(210 40% 96%)",
                            foreground: "hsl(222.2 84% 4.9%)",
                        },
                        destructive: {
                            DEFAULT: "hsl(0 84.2% 60.2%)",
                            foreground: "hsl(210 40% 98%)",
                        },
                        muted: {
                            DEFAULT: "hsl(210 40% 96%)",
                            foreground: "hsl(215.4 16.3% 46.9%)",
                        },
                        accent: {
                            DEFAULT: "hsl(210 40% 96%)",
                            foreground: "hsl(222.2 84% 4.9%)",
                        },
                        popover: {
                            DEFAULT: "hsl(0 0% 100%)",
                            foreground: "hsl(222.2 84% 4.9%)",
                        },
                        card: {
                            DEFAULT: "hsl(0 0% 100%)",
                            foreground: "hsl(222.2 84% 4.9%)",
                        },
                    },
                    borderRadius: {
                        lg: "var(--radius)",
                        md: "calc(var(--radius) - 2px)",
                        sm: "calc(var(--radius) - 4px)",
                    },
                }
            }
        }
    </script>
    <style>
        :root {
            --radius: 0.5rem;
        }
        
        .btn {
            @apply inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50;
        }
        
        .btn-primary {
            @apply bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2;
        }
        
        .btn-secondary {
            @apply bg-secondary text-secondary-foreground hover:bg-secondary/80 h-10 px-4 py-2;
        }
        
        .btn-outline {
            @apply border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2;
        }
        
        .card {
            @apply rounded-lg border bg-card text-card-foreground shadow-sm;
        }
        
        .card-header {
            @apply flex flex-col space-y-1.5 p-6;
        }
        
        .card-content {
            @apply p-6 pt-0;
        }
        
        .input {
            @apply flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50;
        }
        
        .badge {
            @apply inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2;
        }
        
        .badge-default {
            @apply border-transparent bg-primary text-primary-foreground hover:bg-primary/80;
        }
        
        .badge-secondary {
            @apply border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s;
            cursor: pointer;
        }
        
        .btn-outline {
            border: 1px solid #d1d5db;
            background: white;
            color: #374151;
            padding: 8px 16px;
            height: 48px;
        }
        
        .btn-outline:hover {
            background: #f9fafb;
            border-color: #9ca3af;
        }
        
        .glass-effect {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.9);
        }
        
        .hover-lift {
            transition: transform 0.3s ease;
        }
        
        .hover-lift:hover {
            transform: translateY(-5px);
        }
        
        /* Store specific styles */
        .store-card {
            @apply rounded-xl border bg-white text-card-foreground shadow-md cursor-pointer;
            border: 2px solid hsl(214.3 31.8% 91.4%);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
            padding: 1rem;
        }
        
        .store-card:hover {
            transform: translateY(-12px) scale(1.02);
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);
            border-color: hsl(222.2 47.4% 11.2%);
        }
        
        .badge-open {
            @apply bg-emerald-500 text-white border-transparent;
            box-shadow: 0 4px 14px 0 rgba(16, 185, 129, 0.3);
        }
        
        .badge-closed {
            @apply bg-red-500 text-white border-transparent;
            box-shadow: 0 4px 14px 0 rgba(239, 68, 68, 0.3);
        }
        
        .search-container {
            position: relative;
            max-width: 650px;
            margin: 0 auto;
        }
        
        .search-input {
            height: 60px;
            font-size: 18px;
            padding-left: 60px;
            padding-right: 24px;
            border-radius: 16px;
            border: 2px solid #e5e7eb;
            background: white;
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            width: 100%;
        }
        
        .search-input:focus {
            outline: none;
            border-color: #1f2937;
            box-shadow: 0 20px 40px -12px rgba(0, 0, 0, 0.15), 0 0 0 4px rgba(31, 41, 55, 0.1);
            transform: translateY(-2px);
        }
        
        .search-input::placeholder {
            color: #9ca3af;
            font-weight: 500;
        }
        
        .search-icon {
            position: absolute;
            left: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: #6b7280;
            z-index: 10;
            transition: all 0.3s ease;
        }
        
        .search-container:focus-within .search-icon {
            color: #1f2937;
            transform: translateY(-50%) scale(1.1);
        }
        
        .store-header-gradient {
            background: linear-gradient(135deg, hsl(222.2 47.4% 11.2%) 0%, hsl(222.2 47.4% 20%) 100%);
        }
        
        .stats-number {
            background: linear-gradient(135deg, hsl(222.2 47.4% 11.2%) 0%, hsl(222.2 47.4% 20%) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Styles de pagination */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 2rem;
        }

        .pagination-btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            min-width: 2.5rem;
            height: 2.5rem;
            padding: 0.5rem;
            border: 2px solid hsl(214.3 31.8% 91.4%);
            background: white;
            color: hsl(222.2 84% 4.9%);
            font-size: 0.875rem;
            font-weight: 500;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            text-decoration: none;
        }

        .pagination-btn:hover {
            border-color: hsl(222.2 47.4% 11.2%);
            background: hsl(210 40% 96%);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .pagination-btn.active {
            background: hsl(222.2 47.4% 11.2%);
            color: white;
            border-color: hsl(222.2 47.4% 11.2%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(31, 41, 55, 0.2);
        }

        .pagination-btn.active:hover {
            background: hsl(222.2 47.4% 20%);
            border-color: hsl(222.2 47.4% 20%);
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            pointer-events: none;
        }

        .pagination-btn.nav-btn {
            min-width: 3rem;
            font-weight: 600;
        }

        .pagination-ellipsis {
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 2.5rem;
            height: 2.5rem;
            color: hsl(215.4 16.3% 46.9%);
            font-weight: 500;
        }

        .pagination-info {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 1rem;
            margin-bottom: 2rem;
            color: hsl(215.4 16.3% 46.9%);
            font-size: 0.875rem;
        }

        /* Responsive design */
        @media (max-width: 640px) {
            .pagination {
                gap: 0.25rem;
            }
            
            .pagination-btn {
                min-width: 2rem;
                height: 2rem;
                font-size: 0.75rem;
            }
            
            .pagination-btn.nav-btn {
                min-width: 2.5rem;
            }
            
            .pagination-ellipsis {
                min-width: 2rem;
                height: 2rem;
            }
            
            /* Masquer certains numéros sur mobile */
            .pagination-btn.hide-mobile {
                display: none;
            }
        }

        /* Style pour les cartes masquées */
        .store-card.hidden-by-pagination {
            display: none !important;
        }
    </style>
</head>
<body class="min-h-screen bg-background font-sans antialiased">
    <!-- Header -->
    <header class="sticky top-0 z-50 glass-effect border-b border-border/40">
        <div class="container mx-auto px-4">
            <div class="flex h-16 items-center justify-between">
                <div class="flex items-center space-x-2">
                    <a href="/" class="flex items-center space-x-2">
                        <div class="flex items-center justify-center w-8 h-8 bg-primary rounded-md">
                            <i data-lucide="store" class="w-4 h-4 text-primary-foreground"></i>
                        </div>
                        <span class="text-xl font-bold text-foreground">AmaZup</span>
                    </a>
                </div>
                
                <nav class="hidden md:flex items-center space-x-6">
                    <a href="/" class="text-muted-foreground hover:text-foreground transition-colors">Accueil</a>
                    <a href="/stores" class="text-foreground font-medium">Magasins</a>
                </nav>
                
                <div class="flex items-center space-x-3">
                    <a href="/signin" class="btn btn-outline">Connexion</a>
                    <a href="/signup" class="btn btn-primary">Inscription</a>
                </div>
            </div>
        </div>
    </header>

    <!-- Page Header -->
    <section class="store-header-gradient py-20">
        <div class="container mx-auto px-4">
            <div class="text-center mb-12">
                <h1 class="text-5xl md:text-6xl font-bold text-white mb-6">
                    Nos Magasins
                </h1>
                <p class="text-xl text-gray-200 max-w-2xl mx-auto">
                    Découvrez notre réseau de <%= stores.length %> magasins et choisissez celui qui vous convient le mieux
                </p>
            </div>
            
            <!-- Search Bar -->
            <div class="search-container">
                <div class="search-icon">
                    <i data-lucide="search" class="h-6 w-6"></i>
                </div>
                <input 
                    type="text" 
                    id="searchInput"
                    class="search-input" 
                    placeholder="Rechercher par nom ou description..."
                    autocomplete="off">
            </div>
        </div>
    </section>

    <!-- Stores Grid -->
    <section class="py-16">
        <div class="container mx-auto px-4">
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" id="storesGrid">
                <% 
                // Données aléatoires pour les informations manquantes
                const cities = ['Paris', 'Lyon', 'Marseille', 'Toulouse', 'Nice', 'Nantes', 'Strasbourg', 'Bordeaux', 'Lille', 'Montpellier', 'Rennes', 'Nancy'];
                const streets = ['Avenue des Champs-Élysées', 'Place Bellecour', 'Quai du Port', 'Place du Capitole', 'Promenade des Anglais', 'Rue Crébillon', 'Place Kléber', 'Cours de l\'Intendance', 'Rue Nationale', 'Place de la Comédie', 'Rue Saint-Georges', 'Place Stanislas'];
                const phoneNumbers = ['01 23 45 67 89', '04 12 34 56 78', '04 91 23 45 67', '05 61 23 45 67', '04 93 23 45 67', '02 40 23 45 67', '03 88 12 34 56', '05 56 78 90 12', '03 20 45 67 89', '04 67 89 12 34', '02 99 12 34 56', '03 83 45 67 89'];
                const hours = ['9h00 - 20h00', '9h00 - 19h30', '10h00 - 18h00', '9h30 - 19h30', '8h30 - 19h00', '10h00 - 19h00'];
                
                function getRandomItem(array, index) {
                    return array[index % array.length];
                }
                %>
                
                <% stores.forEach((store, index) => { %>
                    <% 
                    const randomCity = getRandomItem(cities, index);
                    const randomStreet = getRandomItem(streets, index);
                    const randomPhone = getRandomItem(phoneNumbers, index);
                    const randomHours = getRandomItem(hours, index);
                    const randomNumber = Math.floor(Math.random() * 100) + 1;
                    %>
                    
                    <div class="store-card" onclick="selectStore(<%= store.id %>)" data-store-name="<%= store.name.toLowerCase() %>" data-store-description="<%= store.description.toLowerCase() %>" data-store-city="<%= randomCity.toLowerCase() %>">
                        <div class="card-header">
                            <div class="flex items-center justify-between mb-4">
                                <h3 class="text-2xl font-bold text-foreground"><%= store.name %></h3>
                            </div>
                            <div class="flex items-center text-muted-foreground">
                                <i data-lucide="map-pin" class="w-5 h-5 mr-2 text-blue-500"></i>
                                <span class="font-medium"><%= randomCity %></span>
                            </div>
                        </div>
                        <div class="card-content">
                            <div class="space-y-4">
                                <div class="flex items-start text-muted-foreground">
                                    <i data-lucide="map-pin" class="w-4 h-4 mr-3 mt-1 flex-shrink-0 text-gray-400"></i>
                                    <span><%= randomNumber %> <%= randomStreet %>, <%= randomCity %></span>
                                </div>
                                <div class="flex items-center text-muted-foreground">
                                    <i data-lucide="phone" class="w-4 h-4 mr-3 flex-shrink-0 text-green-500"></i>
                                    <span><%= randomPhone %></span>
                                </div>
                                <div class="flex items-center text-muted-foreground">
                                    <i data-lucide="clock" class="w-4 h-4 mr-3 flex-shrink-0 text-orange-500"></i>
                                    <span><%= randomHours %></span>
                                </div>
                                <div class="flex items-start text-muted-foreground">
                                    <i data-lucide="info" class="w-4 h-4 mr-3 mt-1 flex-shrink-0 text-blue-400"></i>
                                    <span><%= store.description %></span>
                                </div>
                            </div>
                            
                            <div class="mt-6 pt-6 border-t border-border/40">
                                <div class="grid grid-cols-2 gap-4 text-center">
                                    <div>
                                        <div class="text-3xl font-bold stats-number"><%= store.productsCount %></div>
                                        <div class="text-sm text-muted-foreground">Produit<%= store.productsCount > 1 ? 's' : '' %></div>
                                    </div>
                                    <div>
                                        <div class="text-3xl font-bold stats-number"><%= store.categoriesCount %></div>
                                        <div class="text-sm text-muted-foreground">Catégorie<%= store.categoriesCount > 1 ? 's' : '' %></div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mt-6">
                                <button class="btn btn-primary w-full h-12 text-base font-medium hover:scale-105 transition-transform">
                                    <i data-lucide="shopping-bag" class="w-5 h-5 mr-2"></i>
                                    Voir les produits
                                </button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="bg-muted/50 py-12">
        <div class="container mx-auto px-4">
            <div class="grid md:grid-cols-4 gap-8">
                <div>
                    <div class="flex items-center space-x-2 mb-4">
                        <div class="flex items-center justify-center w-8 h-8 bg-primary rounded-md">
                            <i data-lucide="store" class="w-4 h-4 text-primary-foreground"></i>
                        </div>
                        <span class="text-xl font-bold text-foreground">AmaZup</span>
                    </div>
                    <p class="text-muted-foreground">
                        Découvrez notre réseau de magasins et leurs produits
                    </p>
                </div>
                
                <div>
                    <h4 class="text-lg font-semibold mb-4">Navigation</h4>
                    <ul class="space-y-2 text-muted-foreground">
                        <li><a href="/" class="hover:text-foreground transition-colors">Accueil</a></li>
                        <li><a href="/stores" class="hover:text-foreground transition-colors">Nos magasins</a></li>
                        <li><a href="/signin" class="hover:text-foreground transition-colors">Se connecter</a></li>
                        <li><a href="/signup" class="hover:text-foreground transition-colors">S'inscrire</a></li>
                    </ul>
                </div>
                
                <div>
                    <h4 class="text-lg font-semibold mb-4">Support</h4>
                    <ul class="space-y-2 text-muted-foreground">
                        <li><a href="#" class="hover:text-foreground transition-colors">Documentation</a></li>
                        <li><a href="#" class="hover:text-foreground transition-colors">FAQ</a></li>
                        <li><a href="#" class="hover:text-foreground transition-colors">Contact</a></li>
                        <li><a href="#" class="hover:text-foreground transition-colors">Support</a></li>
                    </ul>
                </div>
                
                <div>
                    <h4 class="text-lg font-semibold mb-4">Légal</h4>
                    <ul class="space-y-2 text-muted-foreground">
                        <li><a href="#" class="hover:text-foreground transition-colors">Conditions d'utilisation</a></li>
                        <li><a href="#" class="hover:text-foreground transition-colors">Politique de confidentialité</a></li>
                        <li><a href="#" class="hover:text-foreground transition-colors">Mentions légales</a></li>
                    </ul>
                </div>
            </div>
            
            <div class="border-t border-border/40 mt-8 pt-8 text-center text-muted-foreground">
                <p>&copy; 2024 AmaZup. Tous droits réservés.</p>
            </div>
        </div>
    </footer>

    <script>
        // Système de pagination pour les cartes existantes
        class StoresPaginationSystem {
            constructor(itemsPerPage = 6) {
                this.itemsPerPage = itemsPerPage;
                this.currentPage = 1;
                this.allStoreCards = [];
                this.filteredStoreCards = [];
                this.totalPages = 0;
                
                // Récupérer toutes les cartes de magasins
                this.allStoreCards = Array.from(document.querySelectorAll('.store-card'));
                this.filteredStoreCards = [...this.allStoreCards];
                
                // Créer le conteneur de pagination
                this.createPaginationContainer();
                this.updatePagination();
                this.renderCurrentPage();
            }
            
            createPaginationContainer() {
                const storesSection = document.querySelector('#storesGrid').closest('section');
                const paginationHTML = `
                    <div class="pagination" id="paginationControls">
                        <!-- Les boutons seront générés dynamiquement -->
                    </div>
                    <div class="pagination-info" id="paginationInfo">
                        <!-- Les infos seront générées dynamiquement -->
                    </div>
                `;
                
                storesSection.insertAdjacentHTML('afterend', paginationHTML);
                this.paginationControls = document.getElementById('paginationControls');
                this.paginationInfo = document.getElementById('paginationInfo');
            }
            
            updatePagination() {
                this.totalPages = Math.ceil(this.filteredStoreCards.length / this.itemsPerPage);
                
                if (this.currentPage > this.totalPages) {
                    this.currentPage = Math.max(1, this.totalPages);
                }
                
                this.renderPaginationControls();
                this.renderPaginationInfo();
            }
            
            renderPaginationControls() {
                if (this.totalPages <= 1) {
                    this.paginationControls.style.display = 'none';
                    return;
                }
                
                this.paginationControls.style.display = 'flex';
                
                let buttonsHTML = '';
                
                // Bouton Précédent
                const prevDisabled = this.currentPage === 1 ? 'disabled' : '';
                buttonsHTML += `
                    <button class="pagination-btn nav-btn" ${prevDisabled} onclick="storesPagination.goToPage(${this.currentPage - 1})">
                        <i data-lucide="chevron-left" style="width: 1rem; height: 1rem;"></i>
                        Précédent
                    </button>
                `;
                
                // Boutons de numéro de page
                for (let i = 1; i <= this.totalPages; i++) {
                    const activeClass = i === this.currentPage ? 'active' : '';
                    const hideMobileClass = this.shouldHideOnMobile(i) ? 'hide-mobile' : '';
                    
                    buttonsHTML += `
                        <button class="pagination-btn ${activeClass} ${hideMobileClass}" 
                                onclick="storesPagination.goToPage(${i})">
                            ${i}
                        </button>
                    `;
                }
                
                // Bouton Suivant
                const nextDisabled = this.currentPage === this.totalPages ? 'disabled' : '';
                buttonsHTML += `
                    <button class="pagination-btn nav-btn" ${nextDisabled} onclick="storesPagination.goToPage(${this.currentPage + 1})">
                        Suivant
                        <i data-lucide="chevron-right" style="width: 1rem; height: 1rem; margin-left: 0.25rem;"></i>
                    </button>
                `;
                
                this.paginationControls.innerHTML = buttonsHTML;
                
                // Réinitialiser les icônes Lucide
                if (typeof lucide !== 'undefined') {
                    lucide.createIcons();
                }
            }
            
            shouldHideOnMobile(pageNumber) {
                const range = 1;
                return Math.abs(pageNumber - this.currentPage) > range && 
                       pageNumber !== 1 && 
                       pageNumber !== this.totalPages;
            }
            
            renderPaginationInfo() {
                if (this.filteredStoreCards.length === 0) {
                    this.paginationInfo.innerHTML = 'Aucun magasin trouvé';
                    return;
                }
                
                const startItem = (this.currentPage - 1) * this.itemsPerPage + 1;
                const endItem = Math.min(this.currentPage * this.itemsPerPage, this.filteredStoreCards.length);
                
                this.paginationInfo.innerHTML = `
                    Affichage de ${startItem} à ${endItem} sur ${this.filteredStoreCards.length} magasin${this.filteredStoreCards.length > 1 ? 's' : ''}
                `;
            }
            
            goToPage(page) {
                if (page < 1 || page > this.totalPages || page === this.currentPage) {
                    return;
                }
                
                this.currentPage = page;
                this.updatePagination();
                this.renderCurrentPage();
                
                // Scroll vers le haut de la grille
                const storesSection = document.querySelector('#storesGrid').closest('section');
                storesSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
            
            renderCurrentPage() {
                // Masquer toutes les cartes
                this.allStoreCards.forEach(card => {
                    card.classList.add('hidden-by-pagination');
                });
                
                // Afficher seulement les cartes de la page courante
                const startIndex = (this.currentPage - 1) * this.itemsPerPage;
                const endIndex = startIndex + this.itemsPerPage;
                const cardsToShow = this.filteredStoreCards.slice(startIndex, endIndex);
                
                cardsToShow.forEach(card => {
                    card.classList.remove('hidden-by-pagination');
                });
            }
            
            updateWithFilteredCards(filteredCards) {
                this.filteredStoreCards = filteredCards;
                this.currentPage = 1;
                this.updatePagination();
                this.renderCurrentPage();
            }
        }

        // Instance globale de pagination
        let storesPagination;

        // Initialisation
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Page loaded, initializing...');
            
            // Initialize Lucide icons safely
            try {
                if (typeof lucide !== 'undefined') {
                    lucide.createIcons();
                    console.log('Lucide icons initialized');
                } else {
                    console.log('Lucide not available');
                }
            } catch (error) {
                console.log('Lucide initialization failed, continuing without it');
            }
            
            // Initialiser le système de pagination
            storesPagination = new StoresPaginationSystem(6); // 6 magasins par page
            
            // Système de recherche
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function(e) {
                    const searchTerm = e.target.value.toLowerCase();
                    
                    // Filtrer les cartes de magasins
                    const filteredCards = storesPagination.allStoreCards.filter(card => {
                        const storeName = card.dataset.storeName || '';
                        const storeDescription = card.dataset.storeDescription || '';
                        const storeCity = card.dataset.storeCity || '';
                        
                        return storeName.includes(searchTerm) || 
                          storeDescription.includes(searchTerm) || 
                          storeCity.includes(searchTerm);
                    });
                    
                    // Mettre à jour la pagination avec les cartes filtrées
                    storesPagination.updateWithFilteredCards(filteredCards);
                });
            }
            
            console.log('Système de pagination des magasins initialisé');
        });
        
        // Fonction pour sélectionner un magasin
        function selectStore(storeId) {
            window.location.href = `/stores/${storeId}/products`;
        }
        
        // Smooth scrolling pour les liens d'ancrage
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
    </script>
</body>
</html>