<style>
  /* CSS pour le menu utilisateur */
  .user-dropdown-open {
      opacity: 1 !important;
      visibility: visible !important;
      transform: translateY(0) !important;
  }
  
  /* Animation pour le bouton utilisateur */
  #userMenuButton:hover {
      transform: scale(1.05);
  }
  
  /* Styles pour le menu déroulant */
  #userDropdown {
      z-index: 1000;
      backdrop-filter: blur(8px);
      background: rgba(255, 255, 255, 0.95);
  }
  
  /* Responsive pour mobile */
  @media (max-width: 768px) {
      #userDropdown {
          width: 200px;
          right: -10px;
      }
  }
</style>

<header class="sticky top-0 z-50 glass-effect border-b border-border/40">
  <div class="container mx-auto px-4">
      <div class="flex h-16 items-center justify-between">
          <div class="flex items-center space-x-2">
              <div class="flex items-center justify-center w-8 h-8 bg-primary rounded-md">
                  <i data-lucide="store" class="w-4 h-4 text-primary-foreground"></i>
              </div>
              <span class="text-xl font-bold text-foreground">AmaZup</span>
          </div>
          
          <nav class="hidden md:flex items-center space-x-6">
              <a href="/" class="text-foreground font-medium">Accueil</a>
              <a href="/stores" class="text-muted-foreground hover:text-foreground transition-colors">Magasins</a>
          </nav>
          
          <div class="flex items-center space-x-3">
              <% if (!user) { %>
                  <a href="/signin" class="btn btn-outline">Connexion</a>
                  <a href="/signup" class="btn btn-primary">Inscription</a>
              <% } else { %>
                  <!-- Menu utilisateur -->
                  <div class="relative">
                      <button id="userMenuButton" class="flex items-center justify-center w-10 h-10 bg-primary rounded-full hover:bg-primary/90 transition-colors">
                          <i data-lucide="user" class="w-5 h-5 text-primary-foreground"></i>
                      </button>
                      
                      <!-- Menu déroulant -->
                      <div id="userDropdown" class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg border border-border/40 opacity-0 invisible transform -translate-y-2 transition-all duration-200">
                          <div class="py-1">
                              <a href="/profile" class="flex items-center px-4 py-2 text-sm text-foreground hover:bg-muted/50 transition-colors">
                                  <i data-lucide="user" class="w-4 h-4 mr-3"></i>
                                  Mon profil
                              </a>
                              <a href="/change-password" class="flex items-center px-4 py-2 text-sm text-foreground hover:bg-muted/50 transition-colors">
                                  <i data-lucide="key" class="w-4 h-4 mr-3"></i>
                                  Changer le mot de passe
                              </a>
                              <% if (user.admin) { %>
                                  <a href="/admin" class="flex items-center px-4 py-2 text-sm text-foreground hover:bg-muted/50 transition-colors">
                                      <i data-lucide="settings" class="w-4 h-4 mr-3"></i>
                                      Administration
                                  </a>
                              <% } %>
                              <div class="border-t border-border/40 my-1"></div>
                              <button id="logoutBtn" class="w-full flex items-center px-4 py-2 text-sm text-destructive hover:bg-muted/50 transition-colors">
                                  <i data-lucide="log-out" class="w-4 h-4 mr-3"></i>
                                  Déconnexion
                              </button>
                          </div>
                      </div>
                  </div>
              <% } %>
          </div>
      </div>
  </div>
</header>

<script>
  // JavaScript pour le menu utilisateur
  document.addEventListener('DOMContentLoaded', function() {
      const userMenuButton = document.getElementById('userMenuButton');
      const userDropdown = document.getElementById('userDropdown');
      const logoutBtn = document.getElementById('logoutBtn');
      
      if (userMenuButton && userDropdown) {
          // Toggle du menu au clic
          userMenuButton.addEventListener('click', function(e) {
              e.stopPropagation();
              userDropdown.classList.toggle('user-dropdown-open');
          });
          
          // Fermer le menu si on clique ailleurs
          document.addEventListener('click', function(e) {
              if (!userMenuButton.contains(e.target) && !userDropdown.contains(e.target)) {
                  userDropdown.classList.remove('user-dropdown-open');
              }
          });
          
          // Fermer le menu avec la touche Escape
          document.addEventListener('keydown', function(e) {
              if (e.key === 'Escape') {
                  userDropdown.classList.remove('user-dropdown-open');
              }
          });
          
          // Empêcher la fermeture du menu si on clique dessus
          userDropdown.addEventListener('click', function(e) {
              e.stopPropagation();
          });
      }
      
      // Gestion du bouton déconnexion
      if (logoutBtn) {
          logoutBtn.addEventListener('click', function(e) {
              e.preventDefault();
              
              // Faire la requête GET vers /api/v1/auth/logout
              fetch('/api/v1/auth/logout', {
                  method: 'GET',
                  credentials: 'include' // Pour inclure les cookies de session
              })
              .then(response => {
                  if (response.ok) {
                      // Rediriger vers la page d'accueil en cas de succès
                      window.location.href = '/';
                  } else {
                      console.error('Erreur lors de la déconnexion');
                      // Optionnel : afficher un message d'erreur à l'utilisateur
                  }
              })
              .catch(error => {
                  console.error('Erreur réseau:', error);
                  // Optionnel : afficher un message d'erreur à l'utilisateur
              });
          });
      }
  });
</script>