<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Changer Mot de Passe - AmaZup</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        }
        
        body {
            background-color: #f1f5f9;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #f1f5f9;
            padding: 20px;
        }
        
        .password-container {
            display: flex;
            width: 100%;
            max-width: 900px;
            background: white;
            border-radius: 1.5rem;
            overflow: hidden;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.3);
        }
        
        .password-left {
            flex: 1;
            background: linear-gradient(135deg, #0ea5e9 0%, #1e293b 100%);
            padding: 2rem;
            display: flex;
            flex-direction: column;
            position: relative;
            overflow: hidden;
        }
        
        .password-left::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        }
        
        .password-right {
            flex: 1;
            padding: 2rem;
            display: flex;
            flex-direction: column;
            background: white;
            color: #0f172a;
            overflow-y: auto;
            justify-content: center;
        }
        
        .logo {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
        }
        
        .logo-icon {
            width: 2.8rem;
            height: 2.8rem;
            background: white;
            border-radius: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            color: #0ea5e9;
        }
        
        .logo-text {
            font-size: 1.6rem;
            font-weight: 700;
            color: white;
        }
        
        .welcome-title {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.8rem;
            position: relative;
            z-index: 10;
        }
        
        .welcome-subtitle {
            font-size: 1rem;
            opacity: 0.9;
            margin-bottom: 1.5rem;
            max-width: 90%;
            line-height: 1.6;
            position: relative;
            z-index: 10;
        }
        
        .features {
            margin-top: 1.5rem;
            position: relative;
            z-index: 10;
        }
        
        .feature {
            display: flex;
            align-items: flex-start;
            margin-bottom: 1rem;
        }
        
        .feature-icon {
            width: 2.2rem;
            height: 2.2rem;
            border-radius: 0.75rem;
            background: rgba(255, 255, 255, 0.15);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            flex-shrink: 0;
        }
        
        .feature-text {
            font-size: 0.95rem;
            opacity: 0.9;
        }
        
        .password-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.4rem;
            color: #1e293b;
        }
        
        .password-subtitle {
            font-size: 0.95rem;
            color: #64748b;
            margin-bottom: 1.5rem;
        }
        
        .form-group {
            margin-bottom: 1.2rem;
            position: relative;
        }
        
        .form-label {
            display: block;
            margin-bottom: 0.4rem;
            font-weight: 500;
            color: #0f172a;
            font-size: 0.95rem;
        }
        
        .form-input {
            width: 100%;
            padding: 1rem 1rem 1rem 3rem;
            border: 1px solid #e2e8f0;
            border-radius: 0.5rem;
            font-size: 0.95rem;
            transition: all 0.2s;
            background: white;
            color: #0f172a;
            height: 50px;
        }
        
        .form-input:focus {
            outline: none;
            border-color: #0ea5e9;
            box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);
        }
        
        .input-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #64748b;
            z-index: 10;
            font-size: 0.95rem;
        }
        
        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #64748b;
            z-index: 10;
            font-size: 0.95rem;
            transition: color 0.2s;
        }
        
        .password-toggle:hover {
            color: #0ea5e9;
        }
        
        .change-btn {
            width: 100%;
            padding: 1rem;
            background: #1e293b;
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 0.95rem;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s, transform 0.2s;
            margin: 1.2rem 0;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 50px;
        }
        
        .change-btn:hover {
            background: rgba(30, 41, 59, 0.9);
            transform: translateY(-2px);
        }
        
        .change-btn:disabled {
            background: #94a3b8;
            cursor: not-allowed;
            transform: none;
        }
        
        .change-btn i {
            margin-right: 12px;
        }
        
        .login-link {
            text-align: center;
            color: #64748b;
            margin-top: 0.8rem;
            font-size: 0.95rem;
        }
        
        .login-link a {
            color: #0ea5e9;
            text-decoration: none;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            transition: all 0.2s;
        }
        
        .login-link a:hover {
            text-decoration: underline;
            color: #0d8ecf;
        }
        
        .login-link i {
            margin-right: 8px;
        }
        
        .error-message, .success-message {
            font-size: 0.85rem;
            margin-top: 0.4rem;
            padding: 0.5rem;
            border-radius: 0.375rem;
            display: none;
        }
        
        .error-message {
            color: #ef4444;
            background: #fef2f2;
            border: 1px solid #fecaca;
        }
        
        .success-message {
            color: #10b981;
            background: #f0fdf4;
            border: 1px solid #bbf7d0;
        }
        
        .password-strength {
            height: 5px;
            background: #e2e8f0;
            border-radius: 3px;
            margin-top: 0.4rem;
            overflow: hidden;
        }
        
        .strength-meter {
            height: 100%;
            width: 0;
            background: #ef4444;
            transition: width 0.3s, background 0.3s;
        }
        
        .password-requirements {
            margin-top: 0.4rem;
            color: #64748b;
            font-size: 0.75rem;
        }
        
        .requirement {
            display: flex;
            align-items: center;
            margin-bottom: 0.2rem;
        }
        
        .requirement i {
            margin-right: 0.4rem;
            font-size: 0.65rem;
            width: 12px;
            color: #64748b;
            transition: color 0.3s ease;
        }
        
        .requirement.met i {
            color: #10b981;
        }
        
        .spinner {
            animation: spin 1s linear infinite;
            margin-right: 8px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .form-animation {
            animation: fadeInUp 0.6s ease-out forwards;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(8px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Toast Notification */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #10b981;
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
            display: flex;
            align-items: center;
            gap: 0.75rem;
            z-index: 1000;
            transform: translateX(400px);
            opacity: 0;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .toast.show {
            transform: translateX(0);
            opacity: 1;
        }
        
        .toast.hide {
            transform: translateX(400px);
            opacity: 0;
        }
        
        /* Styles pour les Ã©crans plus petits */
        @media (max-width: 768px) {
            .password-container {
                flex-direction: column;
                height: auto;
            }
            
            .password-left, .password-right {
                width: 100%;
                padding: 1.5rem;
            }
            
            .password-left {
                order: 2;
            }
            
            .password-right {
                order: 1;
            }
            
            .toast {
                right: 10px;
                left: 10px;
                transform: translateY(-100px);
            }
            
            .toast.show {
                transform: translateY(0);
            }
            
            .toast.hide {
                transform: translateY(-100px);
            }
        }
    </style>
</head>
<body>
    <div class="password-container">
        <div class="password-left">
            <div class="logo">
                <div class="logo-icon">
                    <i class="fas fa-store"></i>
                </div>
                <div class="logo-text">AmaZup</div>
            </div>
            
            <h1 class="welcome-title">SÃ©curitÃ© renforcÃ©e</h1>
            <p class="welcome-subtitle">ProtÃ©gez votre compte AmaZup avec un mot de passe robuste et unique. La sÃ©curitÃ© de vos donnÃ©es est notre prioritÃ©.</p>
            
            <div class="features">
                <div class="feature">
                    <div class="feature-icon">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <p class="feature-text">Protection avancÃ©e de vos donnÃ©es</p>
                </div>
                
                <div class="feature">
                    <div class="feature-icon">
                        <i class="fas fa-sync-alt"></i>
                    </div>
                    <p class="feature-text">Synchronisation immÃ©diate sur tous vos appareils</p>
                </div>
                
                <div class="feature">
                    <div class="feature-icon">
                        <i class="fas fa-lock"></i>
                    </div>
                    <p class="feature-text">Chiffrement de bout en bout</p>
                </div>
            </div>
        </div>
        
        <div class="password-right">
            <div class="form-animation">
                <h2 class="password-title">Changer votre mot de passe</h2>
                <p class="password-subtitle">CrÃ©ez un nouveau mot de passe sÃ©curisÃ© pour votre compte</p>
                
                <form id="passwordForm">
                    <div class="form-group">
                        <label class="form-label" for="email">Adresse email</label>
                        <div class="relative">
                            <i class="fas fa-envelope input-icon"></i>
                            <input type="email" class="form-input" id="email" name="email" 
                              placeholder="votre@email.com" required>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="oldPassword">Mot de passe actuel</label>
                        <div class="relative">
                            <i class="fas fa-lock input-icon"></i>
                            <input type="password" class="form-input" id="oldPassword" name="oldPassword" placeholder="â¢â¢â¢â¢â¢â¢â¢â¢" required>
                            <span class="password-toggle" id="oldPasswordToggle">
                                <i class="fas fa-eye"></i>
                            </span>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="newPassword">Nouveau mot de passe</label>
                        <div class="relative">
                            <i class="fas fa-lock input-icon"></i>
                            <input type="password" class="form-input" id="newPassword" name="newPassword" placeholder="â¢â¢â¢â¢â¢â¢â¢â¢" required>
                            <span class="password-toggle" id="newPasswordToggle">
                                <i class="fas fa-eye"></i>
                            </span>
                        </div>
                        <div class="password-strength">
                            <div class="strength-meter" id="passwordStrength"></div>
                        </div>
                        <div class="password-requirements">
                            <div class="requirement" id="reqLength"><i class="fas fa-circle"></i> 8 caractÃ¨res minimum</div>
                            <div class="requirement" id="reqNumber"><i class="fas fa-circle"></i> Au moins un chiffre</div>
                            <div class="requirement" id="reqUpper"><i class="fas fa-circle"></i> Au moins une majuscule</div>
                            <div class="requirement" id="reqSpecial"><i class="fas fa-circle"></i> Au moins un caractÃ¨re spÃ©cial</div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="confirmNewPassword">Confirmer le nouveau mot de passe</label>
                        <div class="relative">
                            <i class="fas fa-lock input-icon"></i>
                            <input type="password" class="form-input" id="confirmNewPassword" name="confirmNewPassword" placeholder="â¢â¢â¢â¢â¢â¢â¢â¢" required>
                            <span class="password-toggle" id="confirmPasswordToggle">
                                <i class="fas fa-eye"></i>
                            </span>
                        </div>
                        <div class="error-message" id="passwordError"></div>
                    </div>
                    
                    <button type="submit" class="change-btn">
                        <i class="fas fa-key"></i>
                        <span id="changeText">Changer le mot de passe</span>
                    </button>
                    
                    <p class="login-link">
                        <a href="/">
                            <i class="fas fa-arrow-left"></i> Retour Ã  l'accueil
                        </a>
                    </p>
                </form>
            </div>
        </div>
    </div>

    <!-- Toast Container -->
    <div id="toastContainer"></div>

    <script>
        // Variables globales pour stocker les donnÃ©es
        let userData = {
            email: '',
            oldPassword: '',
            newPassword: '',
            confirmNewPassword: '',
            hashOldPassword: '',
            hashNewPassword: '',
            hashNewConfirmPassword: '',
            newSalt: '',
            errorMessage: ''
        };

        document.addEventListener('DOMContentLoaded', function() {
            // Initialisation des toggle de mot de passe
            initPasswordToggles();
            
            // Ãcouteur pour la force du mot de passe
            const newPasswordField = document.getElementById('newPassword');
            if (newPasswordField) {
                newPasswordField.addEventListener('input', checkPasswordStrength);
            }
            
            // Ãcouteur pour le formulaire
            const passwordForm = document.getElementById('passwordForm');
            if (passwordForm) {
                passwordForm.addEventListener('submit', handleFormSubmit);
            }
        });

        function initPasswordToggles() {
            const toggles = [
                { button: 'oldPasswordToggle', field: 'oldPassword' },
                { button: 'newPasswordToggle', field: 'newPassword' },
                { button: 'confirmPasswordToggle', field: 'confirmNewPassword' }
            ];

            toggles.forEach(({ button, field }) => {
                const toggleElement = document.getElementById(button);
                if (toggleElement) {
                    toggleElement.addEventListener('click', function() {
                        togglePasswordVisibility(field, this);
                    });
                }
            });
        }

        function togglePasswordVisibility(fieldId, toggleElement) {
            const passwordField = document.getElementById(fieldId);
            const eyeIcon = toggleElement.querySelector('i');
            
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                eyeIcon.classList.remove('fa-eye');
                eyeIcon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                eyeIcon.classList.remove('fa-eye-slash');
                eyeIcon.classList.add('fa-eye');
            }
        }
        
        // Fonction showToast remplace showError
        function showToast(message, type = 'success') {
            const toastContainer = document.getElementById('toastContainer');
            
            const toast = document.createElement('div');
            toast.className = 'toast';
            
            const iconMap = {
                success: 'fa-check-circle',
                error: 'fa-times-circle',
                warning: 'fa-exclamation-triangle',
                info: 'fa-info-circle'
            };
            
            const colorMap = {
                success: '#10b981',
                error: '#ef4444',
                warning: '#f59e0b',
                info: '#0ea5e9'
            };
            
            toast.style.background = colorMap[type];
            toast.innerHTML = `
                <i class="fas ${iconMap[type]}"></i>
                <span>${message}</span>
            `;
            
            toastContainer.appendChild(toast);
            
            // Afficher le toast
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            // Masquer et supprimer le toast aprÃ¨s 4 secondes
            setTimeout(() => {
                toast.classList.add('hide');
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.parentNode.removeChild(toast);
                    }
                }, 300);
            }, 4000);
        }
        
        function checkPasswordStrength() {
            const password = document.getElementById('newPassword').value;
            const strengthBar = document.getElementById('passwordStrength');
            const requirements = {
                reqLength: password.length >= 8,
                reqNumber: /\d/.test(password),
                reqUpper: /[A-Z]/.test(password),
                reqSpecial: /[!@#$%^&*(),.?":{}|<>]/.test(password)
            };
            
            let strength = 0;
            
            // Update requirements and calculate strength
            Object.keys(requirements).forEach(reqId => {
                const element = document.getElementById(reqId);
                if (element) {
                    element.classList.toggle('met', requirements[reqId]);
                    if (requirements[reqId]) strength += 25;
                }
            });
            
            // Update strength bar
            if (strengthBar) {
                strengthBar.style.width = strength + '%';
                
                if (strength < 50) {
                    strengthBar.style.background = '#ef4444';
                } else if (strength < 75) {
                    strengthBar.style.background = '#f59e0b';
                } else {
                    strengthBar.style.background = '#10b981';
                }
            }
        }

        async function handleFormSubmit(event) {
            event.preventDefault();
            
            const form = event.target;
            const formData = new FormData(form);
            
            // RÃ©cupÃ©ration des valeurs du formulaire
            userData.email = formData.get('email');
            userData.oldPassword = formData.get('oldPassword');
            userData.newPassword = formData.get('newPassword');
            userData.confirmNewPassword = formData.get('confirmNewPassword');
            
            // Validation basique
            if (!userData.email || !userData.oldPassword || !userData.newPassword || !userData.confirmNewPassword) {
                showToast('Veuillez remplir tous les champs', 'error');
                return;
            }
            
            // Validation de l'email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(userData.email)) {
                showToast('Veuillez entrer une adresse email valide', 'error');
                return;
            }
            
            if (userData.newPassword !== userData.confirmNewPassword) {
                showToast('Les nouveaux mots de passe ne correspondent pas', 'error');
                return;
            }
            
            // VÃ©rification de la force du mot de passe
            const strengthBar = document.getElementById('passwordStrength');
            if (strengthBar && strengthBar.style.width !== '100%') {
                showToast('Veuillez crÃ©er un mot de passe plus fort', 'error');
                return;
            }
            
            // Affichage du loading
            setLoadingState(true);
            
            try {
                // Ãtape 1: Appel de l'API signin
                const signinResponse = await fetch('http://localhost/api/v1/auth/signin', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email: userData.email })
                });
                
                if (!signinResponse.ok) {
                    throw new Error('Erreur lors de la rÃ©cupÃ©ration des donnÃ©es utilisateur');
                }
                
                const { salt, pow } = await signinResponse.json();
                
                // Ãtape 2: Calculer le proof of work
                const proof = (() => {
                    let proof = 0;
                    const prefix = "0".repeat(parseInt(pow.difficulty));
                    while (true) {
                        const hash = CryptoJS.SHA256(pow.challenge + proof).toString(CryptoJS.enc.Hex);
                        if (hash.startsWith(prefix)) {
                            return proof;
                        }
                        proof++;
                    }
                })();
                
                // Ãtape 3: GÃ©nÃ©rer un nouveau salt et hasher les mots de passe
                userData.newSalt = CryptoJS.lib.WordArray.random(16).toString(CryptoJS.enc.Hex);
                userData.hashOldPassword = CryptoJS.SHA256(userData.oldPassword + salt).toString(CryptoJS.enc.Hex);
                userData.hashNewPassword = CryptoJS.SHA256(userData.newPassword + userData.newSalt).toString(CryptoJS.enc.Hex);
                userData.hashNewConfirmPassword = CryptoJS.SHA256(userData.confirmNewPassword + userData.newSalt).toString(CryptoJS.enc.Hex);
                
                // VÃ©rification que les mots de passe hachÃ©s correspondent
                if (userData.hashNewPassword !== userData.hashNewConfirmPassword) {
                    showToast('Erreur lors du hachage des mots de passe', 'error');
                    form.reset();
                    setLoadingState(false);
                    return;
                }
                
                // Ãtape 4: Appel de l'API changePassword
                const changePasswordResponse = await fetch('http://localhost/api/v1/auth/changePassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        email: userData.email,
                        hashOldPassword: userData.hashOldPassword,
                        hashNewPassword: userData.hashNewPassword,
                        hashNewConfirmPassword: userData.hashNewConfirmPassword,
                        newSalt: userData.newSalt,
                        signature: pow.signature,
                        challenge: pow.challenge,
                        proof: proof
                    })
                });
                
                if (!changePasswordResponse.ok) {
                    const errorData = await changePasswordResponse.json();
                    throw new Error(errorData.message || 'Erreur lors du changement de mot de passe');
                }
                
                // SuccÃ¨s - Toast de succÃ¨s avant redirection
                showToast('Mot de passe changÃ© avec succÃ¨s !', 'success');
                
                // Attendre un peu avant la redirection pour laisser voir le toast
                setTimeout(() => {
                    window.location.href = '/';
                }, 1500);
                
            } catch (error) {
                console.error('Erreur:', error);
                userData.errorMessage = error.message;
                showToast('Erreur lors du changement de mot de passe', 'error');
            } finally {
                setLoadingState(false);
                form.reset();
            }
        }
        
        function setLoadingState(loading) {
            const changeBtn = document.querySelector('.change-btn');
            const changeText = document.getElementById('changeText');
            const changeIcon = changeBtn.querySelector('i');
            
            if (loading) {
                changeBtn.disabled = true;
                changeText.textContent = 'Changement en cours...';
                changeIcon.className = 'fas fa-spinner spinner';
            } else {
                changeBtn.disabled = false;
                changeText.textContent = 'Changer le mot de passe';
                changeIcon.className = 'fas fa-key';
            }
        }
    </script>
</body>
</html>